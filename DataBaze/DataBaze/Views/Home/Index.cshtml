@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
	ViewData["Title"] = "Главная страница";
}

<!DOCTYPE html>
<html lang="ru">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>@ViewData["Title"]</title>
	<style>
		body {
			font-family: Arial, sans-serif;
			background-color: #f0f0f0;
			color: #333;
			margin: 0;
			padding: 20px;
		}

		h1 {
			text-align: center;
			color: #4CAF50;
		}

		h2 {
			color: #4CAF50;
			margin-top: 40px;
		}

		p {
			text-align: center;
			font-size: 1.2em;
		}

		.management {
			display: flex;
			justify-content: center;
			flex-direction: column;
			align-items: center;
			margin-top: 30px;
		}

		ul {
			list-style-type: none;
			padding: 0;
		}

		li {
			margin: 15px 0;
		}

		a, .login-button a {
			display: inline-block;
			text-decoration: none;
			padding: 15px 30px;
			border-radius: 5px;
			background-color: #4CAF50;
			color: white;
			font-size: 1.1em;
			transition: background-color 0.3s ease;
			width: 200px;
			text-align: center;
			cursor: pointer;
		}

		a:hover, .login-button a:hover {
			background-color: #45a049;
		}

		.login-button {
			display: flex;
			justify-content: center;
			margin-top: 20px;
		}

		.user-info {
			position: absolute;
			top: 20px;
			right: 20px;
			font-size: 1em;
		}

		.logout-button {
			margin-left: 10px;
		}
/* Стили для блока новостей */
.news-feed {
	background-color: #f9f9f9; /* Светлый фон */
	border: 1px solid #ddd; /* Светлая рамка */
	border-radius: 5px; /* Закругленные углы */
	padding: 15px; /* Отступы внутри блока */
	margin-bottom: 20px; /* Отступ снизу */
}

.news-feed h3 {
	color: #333; /* Цвет заголовка */
	margin-bottom: 10px; /* Отступ снизу от заголовка */
}

.news-item {
	background-color: #fff; /* Белый фон для новостей */
	border: 1px solid #ddd; /* Рамка вокруг новостей */
	border-radius: 3px; /* Закругленные углы */
	padding: 10px; /* Отступы внутри элемента новостей */
	margin-bottom: 8px; /* Отступ между новостями */
	transition: background-color 0.3s; /* Плавный переход цвета фона */
}

.news-item:hover {
	background-color: #e9ecef; /* Цвет фона при наведении */
}

/* Стили для блока последних изменений */
.change-log-feed {
	background-color: #f0f8ff; /* Светло-голубой фон */
	border: 1px solid #b0e0e6; /* Голубая рамка */
	border-radius: 5px; /* Закругленные углы */
	padding: 15px; /* Отступы внутри блока */
}

.change-log-feed h3 {
	color: #333; /* Цвет заголовка */
	margin-bottom: 10px; /* Отступ снизу от заголовка */
}

.change-log-item {
	background-color: #fff; /* Белый фон для записей журнала изменений */
	border: 1px solid #b0e0e6; /* Рамка вокруг записей */
	border-radius: 3px; /* Закругленные углы */
	padding: 10px; /* Отступы внутри элемента журнала изменений */
	margin-bottom: 8px; /* Отступ между записями журнала */
	transition: background-color 0.3s; /* Плавный переход цвета фона */
}

.change-log-item:hover {
	background-color: #f1f1f1; /* Цвет фона при наведении */
}

/* Стили для пагинации */
.pagination {
	text-align: center; /* Центрирование текста */
	margin-top: 20px; /* Отступ сверху */
}

.pagination a {
	padding: 5px 10px; /* Отступы вокруг ссылок */
	margin: 0 2px; /* Отступы между ссылками */
	border: 1px solid #007bff; /* Рамка для ссылок */
	border-radius: 3px; /* Закругленные углы */
	color: #007bff; /* Цвет текста */
	text-decoration: none; /* Убираем подчеркивание */
	transition: background-color 0.3s; /* Плавный переход цвета фона */
}

.pagination a:hover {
	background-color: #007bff; /* Цвет фона при наведении */
	color: white; /* Цвет текста при наведении */
}

.pagination strong {
	padding: 5px 10px; /* Отступы вокруг текущей страницы */
	background-color: #007bff; /* Цвет фона для текущей страницы */
	color: white; /* Цвет текста для текущей страницы */
	border-radius: 3px; /* Закругленные углы */
}


	.modal {
		display: none; /* Скрываем окно по умолчанию */
		position: fixed;
		z-index: 9999;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.5);
	}

	/* Контейнер модального окна */
	.modal-dialog {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%); /* Центрируем окно */
		background-color: white;
		border-radius: 5px;
		padding: 20px;
		max-width: 80%; /* Максимальная ширина */
		max-height: 80%; /* Максимальная высота */
		overflow-y: auto; /* Скролл, если контент выходит за пределы */
	}

	/* Кнопка закрытия */
	.modal .close {
		position: absolute;
		top: 10px;
		right: 10px;
		font-size: 1.5em;
		cursor: pointer;
	}

	/* Окно с контентом новости */
	#newsModalBody {
		font-size: 1.1em;
		line-height: 1.6;
	}
	#addNewsForm {
		margin-top: 20px;
		padding: 20px;
		border: 1px solid #ccc;
		border-radius: 5px;
		background-color: #f9f9f9;
	}
/* Стиль для кнопки */
.custom-btn {
	background-color: #4CAF50; /* Зеленый цвет */
	color: white;
	padding: 12px 24px;
	font-size: 16px;
	border-radius: 25px;
	border: none;
	cursor: pointer;
	transition: background-color 0.3s, transform 0.3s;
	box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.custom-btn:hover {
	background-color: #45a049; /* Более темный оттенок при наведении */
	transform: scale(1.05); /* Увеличиваем кнопку при наведении */
}

.custom-btn:active {
	background-color: #388e3c; /* Ещё более темный оттенок при клике */
}
/* Стиль для формы */
.custom-form {
	margin-top: 20px;
	padding: 30px;
	background-color: #f8f8f8;
	border-radius: 10px;
	box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
	max-width: 600px;
	margin-left: auto;
	margin-right: auto;
}

.custom-form h2 {
	font-size: 24px;
	margin-bottom: 20px;
	color: #333;
}

.custom-form .form-group {
	margin-bottom: 20px;
}

.custom-form .form-group label {
	font-weight: bold;
	color: #333;
}

.custom-form .form-control {
	width: 95%;
	padding: 12px;
	font-size: 16px;
	border-radius: 8px;
	border: 1px solid #ccc;
	background-color: #fff;
	transition: border-color 0.3s;
}

.custom-form .form-control:focus {
	border-color: #4CAF50; /* Зеленая рамка при фокусе */
	outline: none;
	box-shadow: 0 0 5px rgba(76, 175, 80, 0.5);
}

.custom-form .form-actions {
	display: flex;
	justify-content: space-between;
	margin-top: 20px;
}

.custom-form .form-actions button {
	width: 48%; /* Делим кнопки на два столбца */
}
</style>
</head>
<body>
	<h1>Добро пожаловать в базу данных S.T.A.L.K.E.R.</h1>

	<div class="user-info">
		<span>Вы вошли как: 
			@{
				var userRole = HttpContextAccessor.HttpContext.Session.GetString("UserRole");
				if (userRole == "Admin")
				{
									<strong>Админ</strong>
				}
				else if (userRole == "Guest")
				{
									<strong>Гость</strong>
				}
				else
				{
									<strong>Неизвестный</strong>
				}
			}
		</span>

		<!-- Кнопка выхода, если пользователь вошел -->
		@if (!string.IsNullOrEmpty(userRole))
		{
					<form action="/Auth/Logout" method="post" class="logout-button" style="display:inline;">
						<button type="submit">Выйти</button>
					</form>
		}
	</div>

	<p>Здесь вы можете управлять данными о сталкерах, кланах, артефактах и других элементах игры.</p>

	@if (userRole == "Admin" || userRole == "Guest")
	{
		<!-- Новости -->
		<div class="news-feed">
			<h3>Новости
				@if (userRole == "Admin")
				{
						<button id="addNewsButton" class="btn btn-primary custom-btn">Добавить новость</button>
				}
			</h3>

			<!-- Форма для добавления новости (скрыта по умолчанию) для Админа -->
			@if (userRole == "Admin")
			{
					<div id="addNewsForm" class="custom-form" style="display: none;">
						<h2>Добавить новость</h2>
						<form id="newsForm">
							<div class="form-group">
								<label for="newsTitle">Заголовок:</label>
								<input type="text" class="form-control" id="newsTitle" name="Title" required placeholder="Введите заголовок новости">
							</div>
							<div class="form-group">
								<label for="newsSummary">Краткое описание:</label>
								<input type="text" class="form-control" id="newsSummary" name="Summary" required placeholder="Введите краткое описание">
							</div>
							<div class="form-group">
								<label for="newsContent">Полный текст:</label>
								<textarea class="form-control" id="newsContent" name="Content" rows="5" required placeholder="Введите полный текст новости"></textarea>
							</div>
							<div class="form-actions">
								<button type="submit" class="btn btn-success custom-btn">Сохранить</button>
								<button type="button" class="btn btn-secondary custom-btn" id="cancelAddNewsButton">Отмена</button>
							</div>
						</form>
					</div>
			}

			<!-- Список новостей (доступно для всех пользователей) -->
			@foreach (var newsItem in ViewBag.News)
			{
					<div class="news-item" onclick="showNewsDetails(@newsItem.Id)">
						<p>@newsItem.Summary</p>
					@if (userRole == "Admin")
					{
								<!-- Кнопка для удаления новости (только для Админа) -->
								<button class="btn btn-danger btn-sm" onclick="deleteNews(@newsItem.Id)">Удалить</button>
					}
					</div>
			}

			<!-- Пагинация для новостей -->
			<div class="pagination">
				@if (ViewBag.NewsCurrentPage > 1)
				{
						<a href="@Url.Action("Index", new { newsPage = ViewBag.NewsCurrentPage - 1, changeLogPage = ViewBag.ChangeLogsCurrentPage })">« Предыдущая</a>
				}

				@for (int i = 1; i <= ViewBag.NewsTotalPages; i++)
				{
					if (i == ViewBag.NewsCurrentPage)
					{
								<strong>@i</strong>
					}
					else
					{
								<a href="@Url.Action("Index", new { newsPage = i, changeLogPage = ViewBag.ChangeLogsCurrentPage })">@i</a>
					}
				}

				@if (ViewBag.NewsCurrentPage < ViewBag.NewsTotalPages)
				{
						<a href="@Url.Action("Index", new { newsPage = ViewBag.NewsCurrentPage + 1, changeLogPage = ViewBag.ChangeLogsCurrentPage })">Следующая »</a>
				}
			</div>
		</div>

		<!-- Журнал изменений -->
		<div class="change-log-feed">
			<h3>Последние изменения</h3>
			@foreach (var log in ViewBag.ChangeLogs)
			{
					<div class="change-log-item">
						<strong>@log.Action @log.EntityType (@log.EntityName)</strong>
						<br />
						<span>Изменено: @log.ChangedBy, @log.ChangeTime.ToString("g")</span>
					</div>
			}

			<!-- Пагинация для журнала изменений -->
			<div class="pagination">
				@if (ViewBag.ChangeLogsCurrentPage > 1)
				{
						<a href="@Url.Action("Index", new { newsPage = ViewBag.NewsCurrentPage, changeLogPage = ViewBag.ChangeLogsCurrentPage - 1 })">« Предыдущая</a>
				}

				@for (int i = 1; i <= ViewBag.ChangeLogsTotalPages; i++)
				{
					if (i == ViewBag.ChangeLogsCurrentPage)
					{
								<strong>@i</strong>
					}
					else
					{
								<a href="@Url.Action("Index", new { newsPage = ViewBag.NewsCurrentPage, changeLogPage = i })">@i</a>
					}
				}

				@if (ViewBag.ChangeLogsCurrentPage < ViewBag.ChangeLogsTotalPages)
				{
						<a href="@Url.Action("Index", new { newsPage = ViewBag.NewsCurrentPage, changeLogPage = ViewBag.ChangeLogsCurrentPage + 1 })">Следующая »</a>
				}
			</div>
		</div>
	}

			<!-- Модальное окно для просмотра новости -->
		<div id="newsModal" class="modal">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title">Детали новости</h5>
						<span class="close" onclick="closeNewsModal()">&times;</span>
					</div>
					<div class="modal-body" id="newsModalBody">
						<!-- Здесь будет загружен контент новости -->
					</div>
				</div>
			</div>
		</div>


	<!-- Кнопки для входа, если пользователь не авторизован -->
	@if (string.IsNullOrEmpty(userRole))
	{
				<div class="login-button">
					<a href="@Url.Action("Login", "Auth")">Войти</a>
				</div>

				<div class="login-button">
					<form action="/Auth/GuestLogin" method="post">
						<button type="submit" style="background-color: #4CAF50; color: white; border: none; border-radius: 5px; padding: 15px 30px; cursor: pointer; font-size: 1.1em; transition: background-color 0.3s ease; width: 260px;">Войти как Гость</button>
					</form>
				</div>
	}

	<!-- Управление данными, если вошел админ или гость -->
	@if (userRole == "Admin" || userRole == "Guest")
	{
				<div class="management">
					<h2>Управление данными</h2>
					<ul>
						<li><a href="http://localhost:5000/Stalker">Список сталкеров</a></li>
						<li><a href="http://localhost:5000/Clan">Список кланов</a></li>
						<li><a asp-controller="Artifact" asp-action="Index">Список артефактов</a></li>
					</ul>
				</div>
	}
	else
	{
				<!-- Сообщение для неизвестного пользователя -->
				<div id="pulseText" style="text-align: center; font-size: 1.2em; color: #d9534f; margin-top: 20px;">
					Авторизируйтесь, чтобы получить доступ!
				</div>

				<script>
					const pulseText = document.getElementById('pulseText');

					setInterval(() => {
						const opacity = window.getComputedStyle(pulseText).opacity;
						pulseText.style.opacity = opacity == 1 ? 0.5 : 1;
					}, 1500);
				</script>
	}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
	$(document).ready(function() {
		// Закрытие окна, если кликнуть вне модального окна
		$(document).mouseup(function(e) {
			var modal = $('#newsModal');
			if (!modal.is(e.target) && modal.has(e.target).length === 0) {
				modal.fadeOut();  // Скрыть окно при клике вне него
			}
		});

		// Функция для отображения модального окна с деталями новости
		window.showNewsDetails = function(newsId) {
			console.log('Запрос подробностей новости с ID:', newsId);  // Логируем ID новости

			$.ajax({
				url: '@Url.Action("GetNewsDetails", "Home")',  // Путь для получения подробностей новости
				type: 'GET',
				data: { id: newsId },  // Передаем ID новости
				success: function(response) {
					console.log('Ответ от сервера:', response);  // Логируем ответ от сервера

					// Проверка успешности получения данных
					if (response.success) {
						console.log('Контент новости:', response.content);  // Логируем контент новости
						// Обновляем контент модального окна
						$('#newsModalBody').html(response.content);

						// Показываем модальное окно с плавным эффектом
						$('#newsModal').fadeIn();
					} else {
						alert('Не удалось загрузить подробности новости.');
					}
				},
				error: function(xhr, status, error) {
					console.error('Ошибка запроса:', status, error);  // Логируем ошибку
					alert('Произошла ошибка при загрузке новости.');
				}
			});
		};

		// Функция для закрытия модального окна
		window.closeNewsModal = function() {
			$('#newsModal').fadeOut();  // Скрыть окно с плавным эффектом
		};
	});
</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
	$(document).ready(function() {
		// Открытие формы для добавления новости
		$('#addNewsButton').click(function() {
			$('#addNewsForm').fadeIn();  // Плавно показываем форму
		});

		// Скрытие формы при нажатии "Отмена"
		$('#cancelAddNewsButton').click(function() {
			$('#addNewsForm').fadeOut();  // Плавно скрываем форму
		});

		// Обработчик отправки формы
		$('#newsForm').submit(function(event) {
			event.preventDefault();  // Отменяем стандартное поведение формы

			var newNews = {
				Title: $('#newsTitle').val(),
				Summary: $('#newsSummary').val(),
				Content: $('#newsContent').val(),
			};

			// Отправка данных на сервер через AJAX
			$.ajax({
				url: '@Url.Action("AddNews", "Home")',  // Путь к методу контроллера
				type: 'POST',
				data: newNews,  // Данные для добавления новости
				success: function(response) {
					if (response.success) {
						alert('Новость успешно добавлена!');
						location.reload();  // Перезагружаем страницу для отображения новости
					} else {
						alert('Не удалось добавить новость.');
					}
				},
				error: function() {
					alert('Произошла ошибка при добавлении новости.');
				}
			});
		});
	});

</script>
<script>
function deleteNews(newsId) {
	if (confirm("Вы уверены, что хотите удалить эту новость?")) {
		// Отправляем AJAX-запрос на сервер для удаления новости
		$.ajax({
			url: '@Url.Action("DeleteNews", "Home")',  // Путь к методу контроллера
			type: 'POST',
			data: { id: newsId },
			success: function(response) {
				if (response.success) {
					// Удаление прошло успешно, обновляем список новостей на странице
					alert('Новость удалена');
					location.reload();  // Перезагружаем страницу для обновления данных
				} else {
					alert('Ошибка при удалении новости.');
				}
			},
			error: function() {
				alert('Произошла ошибка при удалении новости.');
			}
		});
	}
}
</script>
</body>
</html>